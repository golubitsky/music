{"version":3,"sources":["foundation/constants.js","foundation/randomNoteGenerator.js","screens/NotesInRandomOrder.js","foundation/flashCards/polychordFractions.js","foundation/intervals.js","foundation/flashCards/thirdsAndSevenths.js","foundation/flashCards.js","screens/FlashCards.js","App.js","serviceWorker.js","index.js"],"names":["WHITE_KEYS","FLATS","SHARPS","_","require","randomNotes","accidental","black_keys","sample","shuffle","concat","NotesInRandomOrder","props","state","notes","this","isHidden","className","onClick","setState","map","note","index","key","React","Component","NOTES_FIFTH_ABOVE","A","B","C","D","E","F","G","Bb","Eb","Ab","Db","Gb","NOTES_MAJOR_THIRD_ABOVE","NOTES_MINOR_THIRD_ABOVE","NOTES_MINOR_SEVENTH_ABOVE","NOTES_MAJOR_SEVENTH_ABOVE","NOTES_AUGMENTED_FOURTH_ABOVE","NOTES_DIMINISHED_FIFTH_ABOVE","noteAbove","interval","cards","typeOfChord","intervals","Error","front","back","thirdsAndSevenths","DECKS","deck","entries","flashCards","cardValues","thirdSeventhCards","randomCard","previousCard","allCards","card","isEqual","AVAILABLE_DECKS","type","subType","displayName","CARD_COLORS_BY_SIDE","FlashCards","nextCardSide","side","toggleNextCardFace","bind","flipCard","showRandomCard","last","uniq","deckType","outerIndex","filter","innerIndex","Button","variant","handleCardClick","style","backgroundColor","nameOfDeck","name","checked","onChange","App","screenNames","currentScreen","console","log","nameOfScreen","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.43561ca6.chunk.js","sourcesContent":["const WHITE_KEYS = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\"];\nconst FLATS = [\"Bb\", \"Eb\", \"Ab\", \"Db\", \"Gb\"];\nconst SHARPS = [\"C#\", \"D#\", \"F#\", \"G#\", \"A#\"];\n\nexport { WHITE_KEYS, FLATS, SHARPS };\n","// One of twelve, plus enharmonics. [Note]\n// A note belongs to many chords. [Chord]\n// A note is relative to another note. [Interval]\n// Number of chords suggested by 1, 2, 3 (...) notes within the system.\n// [Key]\n\nimport { WHITE_KEYS, FLATS, SHARPS } from \"./constants.js\";\n\nconst _ = require(\"lodash\");\n\nfunction randomNotes(accidental) {\n  let black_keys;\n  if (accidental === \"b\") {\n    black_keys = FLATS;\n  } else if (accidental === \"#\") {\n    black_keys = SHARPS;\n  } else {\n    black_keys = _.sample([FLATS, SHARPS]);\n  }\n  return _.shuffle(WHITE_KEYS.concat(black_keys));\n}\n\nexport { randomNotes };\n","import React from \"react\";\nimport \"./NotesInRandomOrder.css\";\nimport { randomNotes } from \"../foundation/randomNoteGenerator.js\";\n\nexport class NotesInRandomOrder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notes: randomNotes(),\n    };\n  }\n\n  render() {\n    if (this.props.isHidden) {\n      return null;\n    }\n\n    return (\n      <div className=\"NotesInRandomOrder\">\n        <div\n          className=\"grid\"\n          onClick={() => {\n            this.setState({ notes: randomNotes() });\n          }}\n        >\n          {this.state.notes.map((note, index) => (\n            <div className=\"cell\" key={index}>\n              {note}\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n","import flashCards from \"./polychordFractions.json\";\nconst _ = require(\"lodash\");\n\nfunction cards() {\n  return _.entries(flashCards).map(function (cardValues) {\n    return {\n      front: cardValues[0],\n      back: cardValues[1],\n    };\n  });\n}\n\nexport { cards };\n","// One of twelve, plus enharmonics. [Note]\n// A note belongs to many chords. [Chord]\n// A note is relative to another note. [Interval]\n// Number of chords suggested by 1, 2, 3 (...) notes within the system.\n// [Key]\n\nconst NOTES_FIFTH_ABOVE = {\n  // White keys\n  A: \"E\",\n  B: \"F#\",\n  C: \"G\",\n  D: \"A\",\n  E: \"B\",\n  F: \"C\",\n  G: \"D\",\n  // Sharps\n  \"A#\": \"E#\",\n  \"C#\": \"G#\",\n  \"D#\": \"A#\",\n  \"F#\": \"C#\",\n  \"G#\": \"D#\",\n  // Flats\n  Bb: \"F\",\n  Eb: \"Bb\",\n  Ab: \"Eb\",\n  Db: \"Ab\",\n  Gb: \"Db\",\n};\n\nconst NOTES_MAJOR_THIRD_ABOVE = {\n  // White keys\n  A: \"C#\",\n  B: \"D#\",\n  C: \"E\",\n  D: \"F#\",\n  E: \"G#\",\n  F: \"A\",\n  G: \"B\",\n  // Sharps\n  \"A#\": \"C##\",\n  \"C#\": \"E#\",\n  \"D#\": \"F##\",\n  \"F#\": \"A#\",\n  \"G#\": \"B#\",\n  // Flats\n  Bb: \"D\",\n  Eb: \"G\",\n  Ab: \"C\",\n  Db: \"F\",\n  Gb: \"Bb\",\n};\n\nconst NOTES_MINOR_THIRD_ABOVE = {\n  // White keys\n  A: \"C\",\n  B: \"D\",\n  C: \"Eb\",\n  D: \"F\",\n  E: \"G\",\n  F: \"Ab\",\n  G: \"Bb\",\n  // Sharps\n  \"A#\": \"C#\",\n  \"C#\": \"E\",\n  \"D#\": \"F#\",\n  \"F#\": \"A\",\n  \"G#\": \"B\",\n  // Flats\n  Bb: \"Db\",\n  Eb: \"Gb\",\n  Ab: \"Cb\",\n  Db: \"Fb\",\n  Gb: \"Bbb\",\n};\n\nconst NOTES_MINOR_SEVENTH_ABOVE = {\n  // White keys\n  A: \"G\",\n  B: \"A\",\n  C: \"Bb\",\n  D: \"C\",\n  E: \"D\",\n  F: \"Eb\",\n  G: \"F\",\n  // Sharps\n  \"A#\": \"G#\",\n  \"C#\": \"B\",\n  \"D#\": \"C#\",\n  \"F#\": \"E\",\n  \"G#\": \"F#\",\n  // Flats\n  Bb: \"Ab\",\n  Eb: \"Db\",\n  Ab: \"Gb\",\n  Db: \"Cb\",\n  Gb: \"Fb\",\n};\n\nconst NOTES_MAJOR_SEVENTH_ABOVE = {\n  // White keys\n  A: \"G#\",\n  B: \"A#\",\n  C: \"B\",\n  D: \"C#\",\n  E: \"D#\",\n  F: \"E\",\n  G: \"F#\",\n  // Sharps\n  \"A#\": \"G##\",\n  \"C#\": \"B#\",\n  \"D#\": \"C##\",\n  \"F#\": \"E#\",\n  \"G#\": \"F##\",\n  // Flats\n  Bb: \"A\",\n  Eb: \"D\",\n  Ab: \"G\",\n  Db: \"C\",\n  Gb: \"F\",\n};\n\nconst NOTES_AUGMENTED_FOURTH_ABOVE = {\n  // White keys\n  A: \"D#\",\n  B: \"E#\",\n  C: \"F#\",\n  D: \"G#\",\n  E: \"A#\",\n  F: \"B\",\n  G: \"C#\",\n  // Sharps\n  \"A#\": \"D##\",\n  \"C#\": \"F##\",\n  \"D#\": \"G##\",\n  \"F#\": \"B#\",\n  \"G#\": \"C##\",\n  // Flats\n  Bb: \"E\",\n  Eb: \"A\",\n  Ab: \"D\",\n  Db: \"G\",\n  Gb: \"C\",\n};\n\nconst NOTES_DIMINISHED_FIFTH_ABOVE = {\n  // White keys\n  A: \"Eb\",\n  B: \"F\",\n  C: \"Gb\",\n  D: \"Ab\",\n  E: \"Bb\",\n  F: \"Cb\",\n  G: \"Db\",\n  // Sharps\n  \"A#\": \"E\",\n  \"C#\": \"G\",\n  \"D#\": \"A\",\n  \"F#\": \"C\",\n  \"G#\": \"D\",\n  // Flats\n  Bb: \"Fb\",\n  Eb: \"Bbb\",\n  Ab: \"Ebb\",\n  Db: \"Abb\",\n  Gb: \"Dbb\",\n};\n\nfunction noteAbove(note, interval) {\n  if (interval === \"P5\") {\n    return NOTES_FIFTH_ABOVE[note];\n  } else if (interval === \"M3\") {\n    return NOTES_MAJOR_THIRD_ABOVE[note];\n  } else if (interval === \"m3\") {\n    return NOTES_MINOR_THIRD_ABOVE[note];\n  } else if (interval === \"+4\") {\n    return NOTES_AUGMENTED_FOURTH_ABOVE[note];\n  } else if (interval === \"o5\") {\n    return NOTES_DIMINISHED_FIFTH_ABOVE[note];\n  } else if (interval === \"m7\") {\n    return NOTES_MINOR_SEVENTH_ABOVE[note];\n  } else if (interval === \"M7\") {\n    return NOTES_MAJOR_SEVENTH_ABOVE[note];\n  }\n\n  \n}\nexport { noteAbove };\n","import { noteAbove } from \"../intervals.js\";\nimport { WHITE_KEYS, SHARPS, FLATS } from \"../constants.js\";\n\nfunction thirdsAndSevenths(intervals) {\n  return WHITE_KEYS.concat(SHARPS)\n    .concat(FLATS)\n    .map(function (note) {\n      return {\n        front: note,\n        back: `${noteAbove(note, intervals[0])},${noteAbove(\n          note,\n          intervals[1]\n        )}`,\n      };\n    });\n}\n\nfunction cards(typeOfChord) {\n  let intervals;\n  switch (typeOfChord) {\n    case \"△\":\n      intervals = [\"M3\", \"M7\"];\n      break;\n    case \"7\":\n      intervals = [\"M3\", \"m7\"];\n      break;\n    case \"m7\":\n      intervals = [\"m3\", \"m7\"];\n      break;\n    default:\n      throw new Error(`not implemented for typeOfChord=${typeOfChord}`);\n  }\n\n  return thirdsAndSevenths(intervals);\n}\nexport { cards };\n","import { cards as pcCards } from \"./flashCards/polychordFractions.js\";\nimport { cards as thirdSeventhCards } from \"./flashCards/thirdsAndSevenths.js\";\nconst _ = require(\"lodash\");\n\nconst DECKS = [\n  [\"polychordFractions\", \"polychordFractions\"],\n  [\"seventhsAndThirds\", \"△\"],\n  [\"seventhsAndThirds\", \"7\"],\n  [\"seventhsAndThirds\", \"m7\"],\n];\n\nfunction cards(deck) {\n  switch (deck[0]) {\n    case \"polychordFractions\":\n      return pcCards();\n    case \"seventhsAndThirds\":\n      return thirdSeventhCards(deck[1]);\n    default:\n      throw new Error(`not implemented for deck=${deck}`);\n  }\n}\n\nfunction randomCard(deck, previousCard) {\n  let allCards = cards(deck);\n\n  while (true) {\n    let card = _.sample(allCards);\n\n    if (!_.isEqual(card, previousCard)) {\n      return card;\n    }\n  }\n}\n\nfunction availableDecks() {\n  return DECKS.map((deck) => {\n    return {\n      type: deck[0],\n      subType: deck[1],\n      displayName: deck[1],\n    };\n  });\n}\n\nconst AVAILABLE_DECKS = availableDecks();\n\nexport { cards, randomCard, AVAILABLE_DECKS, DECKS };\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport {\n  randomCard,\n  DECKS,\n  AVAILABLE_DECKS,\n} from \"../foundation/flashCards.js\";\nimport \"./FlashCards.css\";\n\nconst _ = require(\"lodash\");\n\nconst CARD_COLORS_BY_SIDE = {\n  front: \"blue\",\n  back: \"green\",\n};\n\nexport class FlashCards extends React.Component {\n  constructor(props) {\n    super(props);\n    let deck = _.sample(DECKS);\n    this.state = {\n      nextCardSide: \"front\",\n      card: randomCard(deck),\n      deck: deck,\n      side: \"front\",\n    };\n\n    // This binding is necessary to make `this` work in the callback\n    this.toggleNextCardFace = this.toggleNextCardFace.bind(this);\n  }\n\n  flipCard() {\n    this.setState({\n      side: this.state.side === \"front\" ? \"back\" : \"front\",\n    });\n  }\n\n  handleCardClick() {\n    if (this.state.side === this.state.nextCardSide) {\n      this.flipCard();\n    } else {\n      this.showRandomCard(this.state.deck);\n    }\n  }\n\n  showRandomCard(deck, side) {\n    // Accept `side` as parameter to allow showing card _while_ changing the side that should be displayed.\n    // UI seems more intuitive if the checkbox to toggle nextCardSide also displays a new card.\n    this.setState({\n      deck: deck,\n      card: randomCard(deck, this.state.card),\n      side: side || this.state.nextCardSide,\n    });\n  }\n\n  toggleNextCardFace() {\n    let side = this.state.nextCardSide === \"front\" ? \"back\" : \"front\";\n    this.setState({\n      nextCardSide: side,\n    });\n    this.showRandomCard(this.state.deck, side);\n  }\n\n  nameOfDeck(deck) {\n    return _.last(deck);\n  }\n\n  render() {\n    if (this.props.isHidden) {\n      return null;\n    }\n\n    return (\n      <div className=\"FlashCards\">\n        <div className=\"deck-selection\">\n          {_.uniq(AVAILABLE_DECKS.map((deck) => deck.type)).map(\n            (deckType, outerIndex) => (\n              <div className=\"deck-selection-row\" key={outerIndex}>\n                <span\n                  className=\"deck-selection-row-header\"\n                  key={outerIndex + 10}\n                >\n                  {deckType}\n                </span>\n                <div className=\"buttons\" key={outerIndex + 20}>\n                  {AVAILABLE_DECKS.filter((deck) => deck.type === deckType).map(\n                    (deck, innerIndex) => (\n                      <Button\n                        variant=\"dark\"\n                        onClick={() => {\n                          this.showRandomCard([deck.type, deck.subType]);\n                        }}\n                        key={innerIndex}\n                      >\n                        {deck.displayName}\n                      </Button>\n                    )\n                  )}\n                </div>\n              </div>\n            )\n          )}\n        </div>\n\n        <div\n          className=\"card\"\n          onClick={() => this.handleCardClick()}\n          style={{\n            backgroundColor: CARD_COLORS_BY_SIDE[this.state.side],\n          }}\n        >\n          <span className=\"card-deck\">{this.nameOfDeck(this.state.deck)}</span>\n          <span className=\"card-content\">\n            {this.state.card[this.state.side]}\n          </span>\n        </div>\n        <div className=\"card-options\">\n          <label>\n            Reverse\n            <input\n              name=\"card-reverse\"\n              type=\"checkbox\"\n              checked={this.state.nextCardSide === \"back\"}\n              onChange={this.toggleNextCardFace}\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Button from \"react-bootstrap/Button\";\n\nimport \"./App.css\";\nimport { NotesInRandomOrder } from \"./screens/NotesInRandomOrder.js\";\nimport { FlashCards } from \"./screens/FlashCards.js\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      screenNames: [\"Notes\", \"Flash Cards\"],\n      currentScreen: \"Notes\",\n    };\n  }\n\n  render() {\n    console.log(this.state.currentScreen);\n    return (\n      <div className=\"wrapper\">\n        <header className=\"page-header\">Music</header>\n        <main className=\"page-main\">\n          <NotesInRandomOrder isHidden={this.state.currentScreen !== \"Notes\"} />\n          <FlashCards isHidden={this.state.currentScreen !== \"Flash Cards\"} />\n        </main>\n        <footer className=\"page-footer\">\n          <div className=\"Footer\">\n            {this.state.screenNames.map((nameOfScreen, index) => (\n              <Button\n                variant=\"dark\"\n                onClick={() => {\n                  this.setState({ currentScreen: nameOfScreen });\n                }}\n                key={index}\n              >\n                {nameOfScreen}\n              </Button>\n            ))}\n          </div>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}